#version 430
#define ID gl_InvocationID

#include <shader/schwarzschild.glsl>

uniform mat4 projMX;
uniform mat4 viewMX;
uniform mat4 obsCamViewMX;
uniform vec3 obsCamPos;
uniform vec3 main_e2;

uniform float imageOrder;

uniform int maxTessLevel;
uniform float tessFactor;
uniform float tessExpon;

in vec3 vNormal[];
in vec2 vTexCoords[];

out vec3 normalTC[];
out vec2 texCoordsTC[];

layout(vertices = 3) out;

void main()
{
    normalTC[ID] = vNormal[ID];
    texCoordsTC[ID] = vTexCoords[ID];

    gl_out[ID].gl_Position = gl_in[ID].gl_Position;

    vec4 v1 = gl_in[0].gl_Position;
    vec4 v2 = gl_in[1].gl_Position;
    vec4 v3 = gl_in[2].gl_Position;

    vec4 v12 = vec4(0.5 * (v1.xyz + v2.xyz), 1.0);
    vec4 v23 = vec4(0.5 * (v2.xyz + v3.xyz), 1.0);
    vec4 v31 = vec4(0.5 * (v3.xyz + v1.xyz), 1.0);

    v1  = projMX * obsCamViewMX * vec4(calcApparentPos(obsCamPos, v1.xyz, imageOrder, 0.8), 1.0);
    v2  = projMX * obsCamViewMX * vec4(calcApparentPos(obsCamPos, v2.xyz, imageOrder, 0.8), 1.0);
    v3  = projMX * obsCamViewMX * vec4(calcApparentPos(obsCamPos, v3.xyz, imageOrder, 0.8), 1.0);
    v12 = projMX * obsCamViewMX * vec4(calcApparentPos(obsCamPos, v12.xyz, imageOrder, 0.8), 1.0);
    v23 = projMX * obsCamViewMX * vec4(calcApparentPos(obsCamPos, v23.xyz, imageOrder, 0.8), 1.0);
    v31 = projMX * obsCamViewMX * vec4(calcApparentPos(obsCamPos, v31.xyz, imageOrder, 0.8), 1.0);

    float dist1 = length(v12.xyz - 0.5 * (v1.xyz + v2.xyz)) / length(v12.xyz);
    float dist2 = length(v23.xyz - 0.5 * (v2.xyz + v3.xyz)) / length(v23.xyz);
    float dist3 = length(v31.xyz - 0.5 * (v3.xyz + v1.xyz)) / length(v31.xyz);

    float factor1 = pow(dist1, tessExpon) * tessFactor;
    float factor2 = pow(dist2, tessExpon) * tessFactor;
    float factor3 = pow(dist3, tessExpon) * tessFactor;

    float tess1 = maxTessLevel * clamp(factor1, 0.0, 1.0);
    float tess2 = maxTessLevel * clamp(factor2, 0.0, 1.0);
    float tess3 = maxTessLevel * clamp(factor3, 0.0, 1.0);

    float tess = max((tess1 + tess2 + tess3) / 3.0, 1.0);

    gl_TessLevelInner[0] = tess;

    gl_TessLevelOuter[0] = tess2;
    gl_TessLevelOuter[1] = tess3;
    gl_TessLevelOuter[2] = tess1;
}
